/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerRole;

import Business.Customer.Customer;
import Business.CustomerRequestOrder;
import Business.EcoSystem;
import Business.Enterprise.DietEnterprise;
import Business.Enterprise.DoctorEnterprise;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.AdminOrganization;
import Business.Organization.GenPracOrganization;
import Business.Organization.NutritionOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.GenPracWorkRequest;
import Business.WorkQueue.NutritionistWorkRequest;
import Business.WorkQueue.WorkRequest;
import Business.utilities.tableHeaderColors;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.SystemAdminWorkArea.ManageNetworkJPanel;

/**
 *
 * @author aishwaryasamel
 */
public class CustomerAnalysisJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CustomerAnalysisJPanel
     */
    private Customer customer;
    private JPanel userProcessContainer;
    private double bmi;
    private CustomerRequestOrder order;
    private UserAccount userAccount;
    private EcoSystem system;
    Enterprise e;
    private Network network;
    public CustomerAnalysisJPanel(JPanel userProcessContainer,Customer customer, EcoSystem system, UserAccount userAccount, Enterprise enterprise, Network network) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.customer = customer;
        this.userAccount = userAccount;
        this.system = system;
        this.network = network;
        dietStatusTbl.getTableHeader().setDefaultRenderer(new tableHeaderColors());
        //this.e = enterprise;
       //this.order = system.getCustomerRequestDirectory().createOrder();
        calculateBMI();
        calculateWeightCategory();
        populateDietStatusTable();
    }
    
    public void calculateBMI(){
       double heightMts = customer.getHeight()/100;
       double heightSquare = heightMts*heightMts;
       bmi = customer.getWeight()/heightSquare;
       System.out.println("BMI  " + bmi);
       String bmiStr = String.format("%.2f", bmi);
       txtBMI.setText(String.valueOf(bmiStr));
      // txtHealthIssue.setText(customer.getHealthIssue());
    }
    
    public void calculateWeightCategory(){
        if(bmi <= 18.5){
            txtWtDec.setText("UNDER WEIGHT");
        }
        else if (bmi > 18.5 && bmi <= 24.9){
            txtWtDec.setText("NORMAL WEIGHT");
        }
        else if(bmi >= 25 && bmi <= 29.9){
            txtWtDec.setText("OVER WEIGHT");
        }
        else if(bmi >= 30){
            txtWtDec.setText("OBESE");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtBMI = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnDocApp = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        txtWtDec = new javax.swing.JTextField();
        goalComboBox = new javax.swing.JComboBox<>();
        trainerAptBtn = new javax.swing.JButton();
        submitRequest = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        dietStatusTbl = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(238, 137, 19));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Your BMI:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 90, 149, 30));

        txtBMI.setEditable(false);
        txtBMI.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        txtBMI.setEnabled(false);
        txtBMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBMIActionPerformed(evt);
            }
        });
        add(txtBMI, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 90, 138, 32));

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Based on your BMI you are:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 130, -1, 40));

        btnDocApp.setBackground(new java.awt.Color(255, 102, 0));
        btnDocApp.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        btnDocApp.setText("Get Doctor Appointment");
        btnDocApp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDocAppActionPerformed(evt);
            }
        });
        add(btnDocApp, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 130, 183, 40));

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Your Goal:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 190, 160, 32));

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(80, 80, 82));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Your Analysis");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(122, 11, 692, 36));

        backJButton.setBackground(new java.awt.Color(255, 102, 0));
        backJButton.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, 30));

        txtWtDec.setEditable(false);
        txtWtDec.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        txtWtDec.setEnabled(false);
        txtWtDec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtWtDecActionPerformed(evt);
            }
        });
        add(txtWtDec, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 140, 138, 32));

        goalComboBox.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        goalComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Gain Weight", "Loose Weight" }));
        add(goalComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 190, 138, 32));

        trainerAptBtn.setBackground(new java.awt.Color(255, 102, 0));
        trainerAptBtn.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        trainerAptBtn.setText("Get Training Workouts");
        trainerAptBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trainerAptBtnActionPerformed(evt);
            }
        });
        add(trainerAptBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 190, 183, 40));

        submitRequest.setBackground(new java.awt.Color(255, 102, 0));
        submitRequest.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        submitRequest.setText("Submit Request to Nutrition");
        submitRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitRequestActionPerformed(evt);
            }
        });
        add(submitRequest, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 270, 190, 45));

        dietStatusTbl.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        dietStatusTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Diet Request ID", "Goal", "Nutritrionist", "Comment", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(dietStatusTbl);
        if (dietStatusTbl.getColumnModel().getColumnCount() > 0) {
            dietStatusTbl.getColumnModel().getColumn(0).setResizable(false);
            dietStatusTbl.getColumnModel().getColumn(1).setResizable(false);
            dietStatusTbl.getColumnModel().getColumn(2).setResizable(false);
            dietStatusTbl.getColumnModel().getColumn(3).setResizable(false);
            dietStatusTbl.getColumnModel().getColumn(4).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(68, 420, 720, 92));

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(80, 80, 82));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Diet Status");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 380, 378, -1));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/images/customerAnalysis.png"))); // NOI18N
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(-430, -70, 1620, 830));
    }// </editor-fold>//GEN-END:initComponents

    private void txtBMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBMIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBMIActionPerformed

    private void btnDocAppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDocAppActionPerformed
        DoctorAppointmentJPanel doc =new DoctorAppointmentJPanel(userProcessContainer, system, network, userAccount);
        userProcessContainer.add("DoctorAppointmentJPanel",doc);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);    
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDocAppActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void txtWtDecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtWtDecActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtWtDecActionPerformed

    private void trainerAptBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trainerAptBtnActionPerformed
        // TODO add your handling code here:
        TrainerAppointmentJPanel trainer =new TrainerAppointmentJPanel(userProcessContainer, system, network, userAccount);
        userProcessContainer.add("TrainerAppointmentJPanel",trainer);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer); 
    }//GEN-LAST:event_trainerAptBtnActionPerformed

    private void submitRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitRequestActionPerformed
        // TODO add your handling code here:
        if(userAccount.getWorkQueue().getWorkRequestList().size()== 0){
                String bmi = txtBMI.getText();
                String goal = (String)goalComboBox.getSelectedItem();
                NutritionistWorkRequest request = new NutritionistWorkRequest();
                request.setMessage(goal);
                request.setSender(userAccount);
                request.setStatus("Request Sent to Admin");
                System.out.print("Request sent to Admin");
                Organization org = null;

                for(Enterprise enter : network.getEnterpriseDirectory().getEnterpriseList()){
                    if(enter instanceof DietEnterprise){
                        e = enter;
                    }
                }
                for (Organization organization : e.getOrganizationDirectory().getOrganizationList()){
                    if (organization instanceof NutritionOrganization){
                        org = organization;
                        break;
                    }
                }
                if (org!=null){
                    org.getWorkQueue().getWorkRequestList().add(request);
                    userAccount.getWorkQueue().getWorkRequestList().add(request);
                }
                        JOptionPane.showMessageDialog(null,"Request has been sent. You will receive an email once it is processed!!","Success",JOptionPane.INFORMATION_MESSAGE);
                populateDietStatusTable();
        }
        else{
            int x = userAccount.getWorkQueue().getWorkRequestList().size()-1;
            WorkRequest r = userAccount.getWorkQueue().getWorkRequestList().get(x);
            if(r.getStatus().toLowerCase().equals("result posted")){
                String bmi = txtBMI.getText();
                String goal = (String)goalComboBox.getSelectedItem();
                NutritionistWorkRequest request = new NutritionistWorkRequest();
                request.setMessage(goal);
                request.setSender(userAccount);
                request.setStatus("Request Sent to Admin");
                System.out.print("Request sent to Admin");
                Organization org = null;

                for(Enterprise enter : network.getEnterpriseDirectory().getEnterpriseList()){
                    if(enter instanceof DietEnterprise){
                        e = enter;
                    }
                }
                for (Organization organization : e.getOrganizationDirectory().getOrganizationList()){
                    if (organization instanceof NutritionOrganization){
                        org = organization;
                        break;
                    }
                }
                if (org!=null){
                    org.getWorkQueue().getWorkRequestList().add(request);
                    userAccount.getWorkQueue().getWorkRequestList().add(request);
                }
                        JOptionPane.showMessageDialog(null,"Request has been sent. You will receive an email once it is processed!!","Success",JOptionPane.INFORMATION_MESSAGE);
                populateDietStatusTable();
        
            }else {
                JOptionPane.showMessageDialog(null,"Please wait until the previous request has been processed !","Alert",JOptionPane.WARNING_MESSAGE);
            }
        } 
       
        
    }//GEN-LAST:event_submitRequestActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnDocApp;
    private javax.swing.JTable dietStatusTbl;
    private javax.swing.JComboBox<String> goalComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton submitRequest;
    private javax.swing.JButton trainerAptBtn;
    private javax.swing.JTextField txtBMI;
    private javax.swing.JTextField txtWtDec;
    // End of variables declaration//GEN-END:variables

    private void populateDietStatusTable() {
        DefaultTableModel dtm = (DefaultTableModel) dietStatusTbl.getModel();
        dtm.setRowCount(0);
        Organization org = null;
        for(Enterprise enter : network.getEnterpriseDirectory().getEnterpriseList()){
            if(enter instanceof DietEnterprise){
                e = enter;
            }
        }
        for (Organization organization : e.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof NutritionOrganization){
                org = organization;
                break;
            }
        }
        if (org!=null){
            for(WorkRequest request: org.getWorkQueue().getWorkRequestList()) {
            if(request.getSender().equals(userAccount)){
            Object row[] = new Object[5];
            row[0] = request.getRequestID();
            row[1] = request.getMessage();
            row[2] = request.getReceiver();
            row[3] = ((NutritionistWorkRequest)request).getDietResult();
            row[4] = request.getStatus();
            dtm.addRow(row);
            }
    }
        }
    }
}
